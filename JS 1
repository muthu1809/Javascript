ஜாவா ஸ்கிரிப்ட்:

ஏன் படிக்க வேண்டும்?
JavaScript is a programming language that adds interactivity to your website. 
This happens in games, in the behavior of responses when buttons are pressed or 
with data entry on forms; with dynamic styling; with animation, etc.

யார் கண்டுபிடித்தார்?
Brendan Eich.

ஜாவாஸ்கிரிப்ட் என்றால் என்ன?
JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language 
with first-class functions.[Lambda Expressions]

JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, 
supporting object-oriented, imperative, and declarative (e.g. functional programming) styles.

ஜாவாஸ்கிரிப்ட், ஜாவா ஒன்றா?
இல்லை.
ஜாவாவின் static type, strong type checking இங்கில்லை. 
ஜாவாவைப் போன்ற syntax, naming convention, basic control flow statements இங்கும் உண்டு.  
அதனால் தான் livescript என்னும் பெயரில் இருந்து ஜாவாஸ்கிரிப்ட் என்று பெயர் வைத்தார்கள்.

ஜாவாஸ்கிரிப்டில் numeric, Boolean and string  உண்டு.

JavaScript is a very free-form language compared to Java.
You do not have to declare all variables, classes, and methods. 
You do not have to be concerned with whether methods are public, private, or protected, 
and you do not have to implement interfaces. 
Variables, parameters, and function return types are not explicitly typed.

Java is a class-based programming language designed for fast execution and type safety.

JavaScript is standardized at Ecma International.

ECMA was formerly an acronym for the European Computer Manufacturers Association

ஜாவாஸ்கிரிப்டை எங்கே தொடங்குவது?
1) வெப் கன்சோல் (Web Console)
Ctrl+Shift+I
Tools --> Developer --> Web Console

2+2

console.log("Hi")
console.log(5+10)

2) Multiline Input:
Ctrl+Shift+Iக்குப் பிறகு Ctrl+B

(function(){
  "use strict";
  /* Start of your code */
  function greetMe(yourName) {
    alert(`Hello ${yourName}`);
  }

  greetMe('World');
  /* End of your code */
})();

மேல் உள்ளதை run பண்ண: Ctrl+Enter

அடிப்படைகள்:
ஜாவாஸ்கிரிப்டின் syntax ஜாவா, சி, சி++ இல் இருந்து வந்தது.  Awk, Perl, Python influenceஉம் உண்டு. 

Types of Variables: 

JavaScript has three kinds of variable declarations.

1. var: 'var' has no block scope. 

function scoped அல்லது globally scoped variable. 

var statement declares a function-scoped or globally-scoped variable, 
optionally initializing it to a value.

var x = 1;

if (x === 1) {
  var x = 2;

  console.log('inside if ', x);
  // expected output: 2
}

console.log('outside if', x);
// expected output: 2

var இப்போது அவ்வளவாகப் பயன்படுத்தப்படுவதில்லை.

let:
The let declaration declares a block-scoped local variable, optionally initializing it to a value.

let a = 1;
if (a === 1) 
{
  let a = 2;
  console.log(a);
  // expected output: 2
}

console.log(a);
// expected output: 1

const:
The const declaration creates block-scoped constants.

const number = 42;
try {
  number = 99;
} catch (err) {
  console.log(err);
  // expected output: TypeError: invalid assignment to const `number'
  // Note - error messages will vary depending on browser
}

console.log(number);
// expected output: 42

----
Variables: [Identifiers]
A JavaScript identifier usually starts with a letter, underscore (_), or dollar sign ($).

In var and let declarations, the initializer is optional. If a variable is declared without an initializer, it is assigned the value undefined.

let num;
console.log(num); // logs "undefined"

Datatypes:

8 Basic Datatypes:

JavaScript is a dynamically typed language. This means you don't have to specify the data type of a variable when you declare it. It also means that data types are automatically converted as-needed during script execution.

let answer = 42;
answer = 'Thanks you for your wishes!';

x = 'The answer is ' + 42 // "The answer is 42"
y = 42 + ' is the answer' // "42 is the answer"
z = '37' + 7 // "377"


'37' - 7 // 30
'37' * 7 // 259

Datatypes: 
8 Datatypes in JavaScript. 

let message = "vanakkam";
message = 78;

இதை ஜாவாஸ்கிரிப்ட் ஏற்றுக் கொள்ளும்.  ஏனென்றால், ஜாவாஸ்கிரிப்ட் ஒரு Dynamically Typed Programming Language.  

1. Number: 
Integer, Float இரண்டிற்குமே Number தான். 

alert( 1 / 0 ); // infinity என்று கொடுக்கும். 
alert(1/"Hi"); // NaN என்று கொடுக்கும்.  Not a Number

2. BigInt: 
2^53 - 1 (9007199254740991) ஐவிடப் பெரியது, -2^53 - 1 ஐவிடச் சின்ன எண் வேண்டும் என்றால், BigInt பயன்படுத்த வேண்டும். 

3. String: 
Double Quotes, Single Quotes, Back Ticks மூன்றும் பயன்படுத்தலாம். 
let str = "Vanakkam";
let str2 = 'Single quotes are ok too';
let phrase = `We can embed another ${str}`;

str = 'Vanakkam'
alert(`${str}  Chennai`)

alert( `the result is ${10 + 20}` );


4. Boolean: 
true or false

let isGreater = 5 > 10;

alert( isGreater );

5. "null" value:
ஜாவாஸ்கிரிப்டில் null என்றால் nothing, empty, unknown value. 
let age = null; 

6. "undefined" value:
let age;

alert(age); // "undefined" என்று வரும்.  

7. Object 
key value pair ஆக உருவாக்கப்படும்.  non-primitive datatype. key-value சேர்ந்து property எனச் சொல்லப்படும்.  key என்பது string ஆகவும் value எதுவாகவும் இருக்கலாம். 

உருவாக்கும் முறைகள்: 
let user = new Object(); // "object constructor" syntax
let user = {};

let user = {     // an object
  name: "அமுதன்",  
  age: 10        
};

alert(user.name);
alert(user.age);

இன்னொரு property சேர்க்க வேண்டுமானால்: 
user.isStudent = true;

alert(user.isStudent); 

user["isTrainee"] = false; 
alert(user.isTrainee);

propertyஐ நீக்க வேண்டுமானால்: 
delete user.age;

8. Symbols
இவை இரண்டும் non-primitive datatypes. இவை இரண்டும் collections of dataக்குப் பயன்படும்.  

typeof operator: 
ஜாவாவில் instanceof operator செய்யும் வேலையை இது செய்யும்.  

let a = 5
alert(typeof(a))


Interactions:
-------------
alert, prompt, confirm

1. alert:
ஏற்கெனவே பார்த்து விட்டோம்.
alert("Vanakkam");
இந்த alert popupஐ modal window என்று சொல்வார்கள்.  [அந்த நேரத்தில் browserஇல் எந்த வேலையும் செய்ய முடியாது]

2. prompt:
modal window - ஒரு input box உடன்.
இரண்டு argumentsஐ ஏற்கும்.  இரண்டாவது argument கட்டாயமில்லை.

let age = prompt('உங்கள் வயது என்ன?', 100);

alert(`உங்களுக்கு  ${age} வயது!`); // You are 100 years old!

Firefoxஇல் இரண்டாவது முயல: {	} சேர்க்கவும். 
https://discourse.mozilla.org/t/syntaxerror-redeclaration-of-formal-parameter/83083/4

3. confirm:
கேள்வியுடன் கூடிய modal window.
let ok = confirm("நலம் தானா?");

alert( ok ); 

பயிற்சி: 
உங்கள் பெயரை உள்ளீடாக வாங்க, ஒரு web page உருவாக்குங்கள். 

<!DOCTYPE html>
<html>
<body>

  <script>
    'use strict';

    let name = prompt("What is your name?", "");
    alert(name);
  </script>

</body>
</html>



Type Conversion: 
----------------
let value = true;
alert(typeof value); // boolean

value = String(value); // now value is a string "true"
alert(typeof value); 

let str = "123";
alert(typeof str); // string

let num = Number(str); // becomes a number 123

alert(typeof num);

alert( Boolean(1) ); // true
alert( Boolean(0) ); // false

alert( Boolean("hello") ); // true
alert( Boolean("") ); // false

Looping: while, do...while and for:
-----------------------------------

while:
let i = 1;
while (i <= 3) {
  alert( i );
  i++;
}

let i = 1;
do {
  alert( i );
  i++;
} while (i <= 3);

for (let i = 0; i < 3; i++)
{
  alert(i);
}

break:
let sum = 0;
while (true) {
  let value = +prompt("Enter a number", '');
  if (!value) break; // (*)
  sum += value;
}
alert( 'Sum: ' + sum );

Labels:
ஜாவாவில் இருப்பதைப் போலவே, இங்கேயும் labels உண்டு.

outer: for (let row = 0; row < 3; row++) {

  for (let col = 0; col < 3; col++) {

    let input = prompt(`Value at looping (${row},${col})`, '');

    // if an empty string or canceled, then break out of both loops
    if (!input) break outer; // (*)

    // do something with the value...
  }
}

alert('Done!');


Functions: 
------------


function showMessage() {
  alert( 'Hello everyone!' );
}


function showMessage() {
  alert( 'Hello everyone!' );
}

showMessage();
showMessage();

Local Variable: 
function showMessage() {
  let message = "Hello, I'm JavaScript!"; // local variable

  alert( message );
}

showMessage(); // Hello, I'm JavaScript!

alert( message ); 

Outer variables: 
let userName = 'Nandhan';

function showMessage() {
  let message = 'Hello, ' + userName;
  alert(message);
}

showMessage(); // Hello, Nandhan 

--
let userName = 'Viyan';

function showMessage() {
  userName = "Nandhan"; // (1) changed the outer variable

  let message = 'Hello, ' + userName;
  alert(message);
}

alert( userName ); // Viyan before the function call

showMessage();

alert( userName ); 

Parameters:
----------
function showMessage(from, text) {

  from = '*' + from + '*'; 

  alert( from + ': ' + text );
}

let from = "Amuthan says to you: ";

showMessage(from, "Hello");
----
function showPrimes(n) {
  nextPrime: for (let i = 2; i < n; i++) {

    for (let j = 2; j < i; j++) {
      if (i % j == 0) continue nextPrime;
    }

    alert( i ); // a prime
  }
}

showPrimes(20);
----
Function expressions:
In JavaScript, Functions are special kind of values. 
function sayHi() {
  alert( "Hello" );
}
மேலே இருப்பது function.  இதையே function expressionஆக எழுதலாம். 

let sayHi = function() {
  alert( "Hello" );
};

alert(sayHi);

Function is a value: 
-------------------
function sayHi() {
  alert( "Hello" );
}

alert( sayHi ); // shows the function code

மேல் உள்ளதில் alert(sayHi()) கொடுத்துப் பாருங்கள்.  

https://javascript.info/function-expressions

Arrow Functions: 

let sum = (a, b) => a + b;

/* This arrow function is a shorter form of:

let sum = function(a, b) {
  return a + b;
};
*/

alert( sum(1, 2) ); // 3

Arguments இல்லையென்றால்:
let sayHi = () => alert("Hello!");

sayHi();

Multiline Arrow Functions: 
let sum = (a, b) => {  // the curly brace opens a multiline function
  let result = a + b;
  return result; // if we use curly braces, then we need an explicit "return"
};

alert( sum(1, 2) ); // 3

----
<html>
<head>
<title> Hi </title>
</head>
<body>
<script>
let sum = (a, b) => {  // the curly brace opens a multiline function
  let result = a + b;
  return result; // if we use curly braces, then we need an explicit "return"
};
alert( sum(1, 2) ); 
</script>
</body>

</html>


https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types


